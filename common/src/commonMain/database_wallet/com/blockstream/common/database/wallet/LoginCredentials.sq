import com.blockstream.common.data.CredentialType;
import com.blockstream.common.gdk.data.PinData;
import com.blockstream.common.data.EncryptedData;

CREATE TABLE IF NOT EXISTS `loginCredentials` (
    `wallet_id` TEXT NOT NULL,
    `credential_type` INTEGER AS CredentialType NOT NULL,
    `network` TEXT NOT NULL DEFAULT '',
    `pin_data` TEXT AS PinData,
    `keystore` TEXT,
    `encrypted_data` TEXT AS EncryptedData,
    `counter` INTEGER NOT NULL DEFAULT 0,
     PRIMARY KEY(`wallet_id`, `credential_type`),
     FOREIGN KEY(`wallet_id`)
     REFERENCES `wallet`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE
 );

getLoginCredentials:
SELECT * FROM loginCredentials WHERE wallet_id = ?;

getLoginCredential:
SELECT * FROM loginCredentials WHERE wallet_id = ? AND credential_type = ?;

replaceLoginCredential:
INSERT OR REPLACE INTO loginCredentials(wallet_id, credential_type, network, pin_data, keystore, encrypted_data, counter)
VALUES (?, ?, ?, ?, ?, ?,?);

deleteLoginCredentials:
DELETE FROM loginCredentials WHERE wallet_id = ? AND credential_type = ?;