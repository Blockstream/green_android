stages:
  - build
  - test
  - deploy
  - upload

#####################################
# Build XCFramework

xcframework:
  image:
    name: greenaddress/android@sha256:6c319f48b63af1107aa3d144fb9ea4ad909648bf6d0c538fa4724690bb64edc6
    entrypoint: [""]
  stage: build
  when: manual
  artifacts:
    name: "green_xcframework-$CI_COMMIT_SHORT_SHA"
    expire_in: 10 days
    when: on_success
    paths:
      - common/build/XCFrameworks/*.zip
  tags:
    - osx
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - ./gradlew assembleXCFramework
    - cd common/build/XCFrameworks
    - zip -r debug.zip debug
    - zip -r release.zip release

#####################################
# Build Signed APKs

production:
  image:
    name: greenaddress/android@sha256:6c319f48b63af1107aa3d144fb9ea4ad909648bf6d0c538fa4724690bb64edc6
    entrypoint: [""]
  stage: build
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 10 days
    when: on_success
    paths:
      - green/build/outputs/apk/productionGoogle/release/*.apk
  tags:
    - ga
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - echo $ANDROID_KEYSTORE_BASE64 | base64 -d > keystore.jks
    - ./gradlew assembleProductionGoogleRelease

production_fdroid:
  image:
    name: greenaddress/android@sha256:6c319f48b63af1107aa3d144fb9ea4ad909648bf6d0c538fa4724690bb64edc6
    entrypoint: [""]
  stage: build
  when: manual
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 10 days
    when: on_success
    paths:
      - green/build/outputs/apk/production/release/*.apk
  tags:
    - ga
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - echo $ANDROID_KEYSTORE_BASE64 | base64 -d > keystore.jks
    - ./gradlew assembleProductionRelease


development:
  image:
    name: greenaddress/android@sha256:6c319f48b63af1107aa3d144fb9ea4ad909648bf6d0c538fa4724690bb64edc6
    entrypoint: [""]
  stage: build
  when: manual
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 7 days
    when: on_success
    paths:
      - green/build/outputs/apk/development/release/*.apk
  tags:
    - ga
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - echo $ANDROID_KEYSTORE_BASE64 | base64 -d > keystore.jks
    - ./gradlew assembleDevelopmentRelease

production_debug:
  image:
    name: greenaddress/android@sha256:6c319f48b63af1107aa3d144fb9ea4ad909648bf6d0c538fa4724690bb64edc6
    entrypoint: [""]
  stage: build
  when: manual
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 7 days
    when: on_success
    paths:
      - green/build/outputs/apk/productionGoogle/debug/*.apk
  tags:
    - ga
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - echo $ANDROID_KEYSTORE_BASE64 | base64 -d > keystore.jks
    - ./gradlew assembleProductionGoogleDebug

gdk_commit:
  image:
    name: greenaddress/android@sha256:6c319f48b63af1107aa3d144fb9ea4ad909648bf6d0c538fa4724690bb64edc6
    entrypoint: [""]
  stage: build
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA-gdk-$GDK_COMMIT"
    expire_in: 7 days
    when: on_success
    paths:
      - green/build/outputs/apk/productionGoogle/release/*.apk
  tags:
    - ga
  when: manual
  variables:
    GDK_COMMIT: master
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - echo $ANDROID_KEYSTORE_BASE64 | base64 -d > keystore.jks
    - ./gdk/fetch_android_binaries.sh -c $GDK_COMMIT
    - ./gradlew assembleProductionGoogleRelease

#####################################
# Build Unsigned APK

build_google_play:
  image:
    name: greenaddress/android@sha256:6c319f48b63af1107aa3d144fb9ea4ad909648bf6d0c538fa4724690bb64edc6
    entrypoint: [""]
  stage: build
  when: manual
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 hour
    when: on_success
    paths:
      - green/build/outputs/apk/productionGoogle/release/*.apk
      - green/build/outputs/mapping/*/mapping.txt
  tags:
    - ga
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - ./gradlew lintProductionGoogleRelease
    - ./gradlew assembleProductionGoogleRelease

build_osx:
  stage: build
  when: manual
  tags:
    - osx
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - ./gradlew assembleProductionGoogleRelease

#####################################
# Test

unit_tests:
  image:
    name: greenaddress/android@sha256:6c319f48b63af1107aa3d144fb9ea4ad909648bf6d0c538fa4724690bb64edc6
    entrypoint: [""]
  stage: test
  needs: []
  tags:
    - ga
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - ./gradlew lintProductionGoogleRelease
    - ./gradlew test

#####################################
# Sign production build

sign_google_play:
  tags:
    - garelease
  stage: deploy
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 30 days
    paths:
      - green/build/outputs/*
    when: on_success
  script:
    - cd $CI_PROJECT_DIR/green/build/outputs/apk/productionGoogle/release/
    - /opt/process_release
  needs:
    - build_google_play

#####################################
# Upload to GCS bucket
.gcp_prep:
  stage: upload
  image: blockstream/gcloud-docker-tf:1.1.9
  tags:
    - ga

gcp_auth:
  extends: .gcp_prep
  when: manual
  variables:
    POOL_ID: gitlab-2f4bb583
    PROVIDER_ID: gitlab
    SERVICE_ACCOUNT_EMAIL: green-android-builds-uploader@green-backend.iam.gserviceaccount.com
  script:
    - echo ${CI_JOB_JWT_V2} > .ci_job_jwt_file
    - gcloud iam workload-identity-pools create-cred-config "projects/697214616889/locations/global/workloadIdentityPools/${POOL_ID}/providers/${PROVIDER_ID}"
      --service-account="${SERVICE_ACCOUNT_EMAIL}"
      --output-file=.gcp_temp_cred.json
      --credential-source-file=.ci_job_jwt_file
  artifacts:
    paths:
      - .gcp_temp_cred.json
      - .ci_job_jwt_file
    expire_in: 1h

gcp_push_production:
  extends: .gcp_prep
  needs: ["gcp_auth", "production"]
  variables:
    GCS_BUCKET: green-android-builds
    APK_NAME: $CI_PROJECT_NAME-$CI_COMMIT_SHA
  before_script:
    - gcloud auth login --cred-file=.gcp_temp_cred.json --update-adc
  script:
    - apk add libqrencode
    - echo "Uploading gs://$GCS_BUCKET/$APK_NAME"
    - gsutil -m cp -r $CI_PROJECT_DIR/green/build/outputs/apk/productionGoogle/release/*.apk gs://$GCS_BUCKET/$APK_NAME.apk
    - echo "https://storage.googleapis.com/$GCS_BUCKET/$APK_NAME.apk"
    - qrencode -t UTF8 "https://storage.googleapis.com/$GCS_BUCKET/$APK_NAME.apk"

gcp_push_development:
  extends: .gcp_prep
  needs: ["gcp_auth", "development"]
  variables:
    GCS_BUCKET: green-android-builds
    APK_NAME: $CI_PROJECT_NAME-$CI_COMMIT_SHA-development
  before_script:
    - gcloud auth login --cred-file=.gcp_temp_cred.json --update-adc
  script:
    - apk add libqrencode
    - echo "Uploading gs://$GCS_BUCKET/$APK_NAME"
    - gsutil -m cp -r $CI_PROJECT_DIR/green/build/outputs/apk/development/release/*.apk gs://$GCS_BUCKET/$APK_NAME.apk
    - echo "https://storage.googleapis.com/$GCS_BUCKET/$APK_NAME.apk"
    - qrencode -t UTF8 "https://storage.googleapis.com/$GCS_BUCKET/$APK_NAME.apk"

gcp_push_gdk_commit:
  extends: .gcp_prep
  needs: ["gcp_auth", "gdk_commit"]
  variables:
    GCS_BUCKET: green-android-builds
    APK_NAME: $CI_PROJECT_NAME-$CI_COMMIT_SHA-gdk
  before_script:
    - gcloud auth login --cred-file=.gcp_temp_cred.json --update-adc
  script:
    - apk add libqrencode
    - echo "Uploading gs://$GCS_BUCKET/$APK_NAME"
    - gsutil -m cp -r $CI_PROJECT_DIR/green/build/outputs/apk/productionGoogle/release/*.apk gs://$GCS_BUCKET/$APK_NAME.apk
    - echo "https://storage.googleapis.com/$GCS_BUCKET/$APK_NAME.apk"
    - qrencode -t UTF8 "https://storage.googleapis.com/$GCS_BUCKET/$APK_NAME.apk"

gcp_push_xcframework:
  extends: .gcp_prep
  needs: ["gcp_auth", "xcframework"]
  variables:
    GCS_BUCKET: green-android-builds
    XCFRAMEWORK_NAME: green_xcframework-$CI_COMMIT_SHA
  before_script:
    - gcloud auth login --cred-file=.gcp_temp_cred.json --update-adc
  script:
    - apk add libqrencode
    - echo "Uploading gs://$GCS_BUCKET/${XCFRAMEWORK_NAME}_debug.zip"
    - gsutil -m cp -r $CI_PROJECT_DIR/common/build/XCFrameworks/release.zip gs://$GCS_BUCKET/${XCFRAMEWORK_NAME}_debug.zip
    - echo "https://storage.googleapis.com/$GCS_BUCKET/${XCFRAMEWORK_NAME}_debug.zip"
    - echo "Uploading gs://$GCS_BUCKET/${XCFRAMEWORK_NAME}_release.zip"
    - gsutil -m cp -r $CI_PROJECT_DIR/common/build/XCFrameworks/release.zip gs://$GCS_BUCKET/${XCFRAMEWORK_NAME}_release.zip
    - echo "https://storage.googleapis.com/$GCS_BUCKET/${XCFRAMEWORK_NAME}_release.zip"