[versions]
jvm = "17"
accompanistPermissions = "0.37.3"
constraintlayoutComposeMultiplatform = "0.6.0"
kotlin = "2.2.20"
kotlinMultiplatformAppdirs = "2.0.0"
kotlinx-coroutines = "1.10.2"
kotlinx-datetime = "0.7.1"
kotlinx-serialization = "1.9.0"
kotlin-ksp = "2.2.20-2.0.3"
kable = "0.40.0"
coil = "3.3.0"
ktor = "3.3.0"
phosphorIcon = "1.0.0"
compose-rebugger = "1.0.1"
tuulbox-coroutines = "8.0.3"
android-gradle-plugin = "8.13.0"
androidCompileSdk = "36"
androidTargetSdk = "36"
androidMinSdk = "24"
statelyConcurrentCollections = "2.1.0"
breez = "0.8.1-rc3"
androidx-junit = "1.3.0"
biometric = "1.4.0-alpha04"
browser = "1.9.0"
appcompat = "1.7.1"
core-ktx = "1.17.0"
core-testing = "2.2.0"
countly-sdk-android = "1e4eb2bb781bc34f614dcecb5182ac23761a8278"
espresso-core = "3.7.0"
installreferrer = "2.2"
jackson = "2.9.6"
junit = "4.13.2"
kase64 = "1.3.1"
kermit = "2.0.8"
kmp-observableviewmodel = "1.0.0-BETA-14"
splash-screen = "1.1.0-rc01"
koin-bom = "4.1.1"
ksoup-entites = "0.2.1"
androidx-lifecycle = "2.9.3"
compose-lifecycle = "2.9.4"
middleEllipsisText3 = "1.2.0"
mpfilepicker = "3.1.0"
multiplatformSettings = "1.3.0"
okio = "3.16.0"
peekabooImagePicker = "0.5.2"
qrose = "1.0.1"
kotlincrypto-hash = "0.7.1"
sqldelight = "2.1.0"
mockito-kotlin = "6.0.0"
mockk = "1.14.5"
preference-ktx = "1.2.1"
guava = "31.1-android"
review-ktx = "2.0.2"
rive-android = "10.4.3"
startup-runtime = "1.2.0"
uriKmp = "0.0.20"
workRuntimeKtx = "2.10.4"
zendesk = "5.2.0"
state-keeper = "2.5.0"
turbine = "1.2.1"
usb-serial = "0f16336a4e"
desugar = "2.1.5"
zxing-android-embedded = "4.3.0"
kmp-nativecoroutines = "1.0.0-ALPHA-47"
compose-tooling-preview = "1.9.1"
navigation = "2.9.0"
jetbrains-compose = "1.9.0"
google-services = "4.4.3"
compose-hot-reload = "1.0.0-beta06"
firebase-bom = "34.2.0"
jna = "5.17.0"
room = "2.7.1"
protobuf-java = "3.4.0"
media3 = "1.8.0"
kotlinTest = "2.2.20"
runner = "1.7.0"
core = "1.7.0"
material3-adaptive = "1.2.0-alpha06"
koalaplot = "0.9.1"

[libraries]
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "compose-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "compose-lifecycle" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splash-screen" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidx-lifecycle" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-test = { module = "io.coil-kt.coil3:coil-test", version.ref = "coil" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }
constraintlayout-compose-multiplatform = { module = "tech.annexflow.compose:constraintlayout-compose-multiplatform", version.ref = "constraintlayoutComposeMultiplatform" }
kotlin-multiplatform-appdirs = { module = "ca.gosyer:kotlin-multiplatform-appdirs", version.ref = "kotlinMultiplatformAppdirs" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
phosphor-icon = { module = "com.adamglin:phosphor-icon", version.ref = "phosphorIcon" }
compose-rebugger = { module = "io.github.theapache64:rebugger", version.ref = "compose-rebugger" }
tuulbox-coroutines = { module = "com.juul.tuulbox:coroutines", version.ref = "tuulbox-coroutines" }
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin" }
stately-concurrent-collections = { module = "co.touchlab:stately-concurrent-collections", version.ref = "statelyConcurrentCollections" }
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "biometric" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "core-testing" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preference-ktx" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startup-runtime" }
breez-sdk-kmp = { module = "technology.breez:breez-sdk-kmp", version.ref = "breez" }
breez-sdk-android = { module = "com.github.breez:breez-sdk", version.ref = "breez" } # Used for FDroid
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }
kable-core = { module = "com.juul.kable:kable-core", version.ref = "kable" }
middle-ellipsis-text3 = { module = "io.github.mataku:middle-ellipsis-text3", version.ref = "middleEllipsisText3" }
mpfilepicker = { module = "com.darkrockstudios:mpfilepicker", version.ref = "mpfilepicker" }
peekaboo-image-picker = { module = "io.github.onseok:peekaboo-image-picker", version.ref = "peekabooImagePicker" }
qrose = { module = "io.github.alexzhirkevich:qrose", version.ref = "qrose" }
kotlincrypto-hash-md = { module = "org.kotlincrypto.hash:md", version.ref = "kotlincrypto-hash" }
kotlincrypto-hash-sha2 = { module = "org.kotlincrypto.hash:sha2", version.ref = "kotlincrypto-hash" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
countly-sdk-android = { module = "com.github.angelix:countly-sdk-android", version.ref = "countly-sdk-android" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
installreferrer = { module = "com.android.installreferrer:installreferrer", version.ref = "installreferrer" }
jackson-datatype-json-org = { module = "com.fasterxml.jackson.datatype:jackson-datatype-json-org", version.ref = "jackson" }
junit = { module = "junit:junit", version.ref = "junit" }
kase64 = { module = "de.peilicke.sascha:kase64", version.ref = "kase64" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kmp-observableviewmodel = { module = "com.rickclephas.kmp:kmp-observableviewmodel-core", version.ref = "kmp-observableviewmodel" }
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin-bom" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-compose = { module = "io.insert-koin:koin-compose" }
koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4" }
koin-test = { module = "io.insert-koin:koin-test" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
ksoup-entites = { module = "com.mohamedrejeb.ksoup:ksoup-entites", version.ref = "ksoup-entites" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
multiplatform-settings-make-observable = { module = "com.russhwolf:multiplatform-settings-make-observable", version.ref = "multiplatformSettings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
state-keeper = { module = "com.arkivanov.essenty:state-keeper", version.ref = "state-keeper" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf-java" }
review-ktx = { module = "com.google.android.play:review-ktx", version.ref = "review-ktx" }
rive-android = { module = "app.rive:rive-android", version.ref = "rive-android" }
uri-kmp = { module = "com.eygraber:uri-kmp", version.ref = "uriKmp" }
zendesk-support-providers = { module = "com.zendesk:support-providers", version.ref = "zendesk" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
usb-serial = { module = "com.github.angelix:UsbSerial", version.ref = "usb-serial" }
zxing-android-embedded = { module = "com.journeyapps:zxing-android-embedded", version.ref = "zxing-android-embedded" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-tooling-preview"}
androidx-activity-compose = { module = "androidx.activity:activity-compose" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }
compose-backhandler = { module = "org.jetbrains.compose.ui:ui-backhandler", version.ref = "jetbrains-compose" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlinTest" }
androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }
androidx-core = { group = "androidx.test", name = "core", version.ref = "core" }
material3-adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "material3-adaptive" }
koalaplot-core = { module = "io.github.koalaplot:koalaplot-core", version.ref = "koalaplot" }

[plugins]
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
nativeCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "android-gradle-plugin" }
androidApplication = { id = "com.android.application", version.ref = "android-gradle-plugin" }
google-devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "kotlin-ksp" }
app-cash-sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
kmp-nativecoroutines = { id = "com.rickclephas.kmp.nativecoroutines", version.ref = "kmp-nativecoroutines" }
googleServices = { id = "com.google.gms.google-services", version.ref = "google-services" }
compose-hotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "compose-hot-reload" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "android-gradle-plugin" }
